cube(3,4)
x <- 1:10
x
if(x>5) {
x<-0
}
source('~/.active-rstudio-document')
z<-10
f(3)
source('~/.active-rstudio-document')
x<-5
y<-if(x<3){
NA
} else {
10
}
y
y<-0
y
x<-5
y<-if(x<3){
NA
} else {
10
}
y
g=3L
g
source('~/Coursera/R_Programming/Assignments/Week3/cacheVector.R')
makeVector(1:50)
X <- makeVector(1:50)
X
cachemean(X)
X.getmean()
get()
get(X)
X.get()
Y <- makeVector()
Y$set(1:50)
Y$get()
cachemean(Y)
Y$getmean()
source('~/Coursera/R_Programming/Assignments/Week3/ProgrammingAssignment2/cachematrix.R')
X <- makeCacheMatrix()
source('~/Coursera/R_Programming/Assignments/Week3/ProgrammingAssignment2/cachematrix.R')
source('~/Coursera/R_Programming/Assignments/Week3/ProgrammingAssignment2/cachematrix.R')
X <- makeCacheMatrix()
source('~/Coursera/R_Programming/Assignments/Week3/ProgrammingAssignment2/cachematrix.R')
source('~/Coursera/R_Programming/Assignments/Week3/ProgrammingAssignment2/cachematrix.R')
X <- makeCacheMatrix()
X$set(matrix(c(1,3,5,7),nrow = 2,ncol = 2))
X$get()
source('~/Coursera/R_Programming/Assignments/Week3/ProgrammingAssignment2/cachematrix.R')
X <- makeCacheMatrix()
X$set(matrix(c(1,3,5,7),nrow = 2,ncol = 2))
X$get()
cacheSolve(X)
X$set(matrix(c(1,2,3,4),nrow = 2,ncol = 2))
cacheSolve(X)
M <- X$get()
M
M_inv <- X$getinverse()
M_inv
source('~/Coursera/R_Programming/Assignments/Week3/ProgrammingAssignment2/cachematrix.R')
M_inv <- X$getinverse()
M_inv
!is.na(M[[1]])
source('~/Coursera/R_Programming/Assignments/Week3/ProgrammingAssignment2/cachematrix.R')
X <- makeCacheMatrix()
X$set(matrix(c(-1,-2,1,1),nrow = 2,ncol = 2))
X <-makeCacheMatrix(c(-1,-2,1,1), 2, 2)
X <-makeCacheMatrix(matrix(c(-1,-2,1,1), 2, 2)
)
X
m <- matrix(c(-1, -2, 1, 1), 2,2)
x <- makeCacheMatrix(m)
x
x$get()
x_inv <- cacheSolve(x)
x_inv <- x$getinverse()
x_inv
x$get()
is.na(x_inv)
is.null(x_inv)
source('~/Coursera/R_Programming/Assignments/Week3/ProgrammingAssignment2/cachematrix.R')
x <- makeCacheMatrix(matrix(c(-1,-2,1,1),nrow = 2, ncol = 2))
x$get()
x_inv <- cacheSolve(x)
x_inv
x_inv <- cacheSolve(x)
x_inv
l = 1:10
l
class(l)
str(l)
str(str)
str(lm)
x <- norm(100,2,4)
x <- rnorm(100,2,4)
summary(x)
str(x0)
str(x)
f <- gl(40,10)
str(f)
summary((g))
summary((f))
str(f)
library(datasets)
head(airquality)
str(airquality)
m <- matrix(rnorm(100),10,10)
str(m)
m[,1]
s <- split(airquality, airquality$Month)
str(s)
rnorm(100,0,1)
x <- rnorm(10)
x
x <- rnorm(10,20,2)
x
set.seed(1)
x <- rnorm(10,20,2)
x
set.seed(1)
x <- rnorm(10,20,2)
x
x <- rnorm(10,20,2)
x
rpois(10,1)()
rpois(10,1)
rpois(10,2)
rpois(10,20)
ppois(2,2)
ppois(4,2)
ppois(10,2)
set.seed(10)
x <- rbinom(100,1,0.5)
e <- rnorm(100,0,2)
y<-0.5*2.0*x+e
summary(y)
plot(x,y)
set.seed(1)
x<-rnorm(100)
log.mu <- 0.5+0.3*x
y <- rpois(100,exp(log.mu))
summary(y)
plot(x,y)
set.seed(1)
sample(1:10,4)
sample(1:10,4)
sample(letters,5)
sample(1:10)
sample(1:10)
sample(1:10,replace=T)
df <- read.csv('outcome-of-care-measures.csv',colClasses = 'character')
setwd('/home/thomas/Coursera/R_Programming/Assignments/Week4')
df <- read.csv('outcome-of-care-measures.csv',colClasses = 'character')
df[,col]
as.numeric(df[,3])
names(df)
as.numeric(df[,11])
df.order.by.outcome <- df[order(as.numeric(df[,11]),df$Hospital.Name,na.last=NA),]
head(df.order.by.outcome)
hospital <- tapply(df.order.by.outcome$Hospital.Name,df.order.by.outcome$State, function(x) else x[2])
hospital <- tapply(df.order.by.outcome$Hospital.Name,df.order.by.outcome$State, function(x) else x[num])
help(tapply)
hospital <- tapply(df.order.by.outcome$Hospital.Name,df.order.by.outcome$State, function(x) x[num])
hospital <- tapply(df.order.by.outcome$Hospital.Name,df.order.by.outcome$State, function(x) x[2])
hospital
class(hospital)
data.frame(hospital,state=names(hospital))
names(hospital)
class(hospital)
help(tapply)
source('rankall.R')
rankall("heart attack",20)
source('rankall.R')
rankall("heart attack","best")
source('rankall.R')
rankall("heart attack",20)
rankall("heart attack",20000)
rankall("heart attack")
rankall("heart attack","worst")
nrow(df)
head(df)
tail(df)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source('rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('rankall.R')
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
df <- df[order(as.numeric(df[,23]),df$Hospital.Name,na.last=NA),]
head(df)
names(df)
head(df)
df[10,23]
df[,23]
head(df)
df <- df[order(as.numeric(df[,23]),df$Hospital.Name,na.last=NA),]
names(df)
head(df)
nrow(df)
tail(df)
df.last
tail(df[,col, drop=F],1)
tail(df[,23, drop=F],1)
tail(df[,3, drop=F],1)
tail(df[,4, drop=F],1)
tail(df[,5, drop=F],1)
tail(df[,6, drop=F],1)
tail(df[,7, drop=F],1)
tail(df[,7, drop=F],2)
tail(df[,7, drop=F],10)
head(df[,7, drop=F],10)
hospital <- tapply(df$Hospital.Name, df$State, function(x) x[nrow(df)])
hospital
nrow(df)
tail(df[,1, drop=F],1)
tail(df[,, drop=F],1)
tail(df[,index, drop=F],1)
tail(df[,df.index, drop=F],1)
source("rankall.R")
tail(rankall("heart failure"), 10)
tail(rankall("heart failure","worst"), 10)
tail(rankall("pneumonia","worst"), 3)
df[1,nrow(df)]
nrow(df)
df[1,4233]
df[2,4233]
df[,4233]
length(df)
source("rankall.R")
tail(rankall("heart failure","worst"), 10)
tail(rankall("heart failure"), 10)
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
length(df$State)
length(df)
tail(df)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("pneumonia", 100), 3)
rankall("pneumonia", 100)
rankall("pneumonia", 1000)
source("rankall.R")
head(rankall("heart attack", 20), 10)
