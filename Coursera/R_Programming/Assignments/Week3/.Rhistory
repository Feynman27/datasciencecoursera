cube(3,4)
x <- 1:10
x
if(x>5) {
x<-0
}
source('~/.active-rstudio-document')
z<-10
f(3)
source('~/.active-rstudio-document')
x<-5
y<-if(x<3){
NA
} else {
10
}
y
y<-0
y
x<-5
y<-if(x<3){
NA
} else {
10
}
y
g=3L
g
x <- list(a=1:5, b=rnorm(10
))
x
lapply(x,mean)
mean(x)\
mean(x)
mean(y)
traceback()
lm(y~z)
traceback()
debug(lm)
lm(y~z)
debug(lm)
lm(y~z)
quit
library(datasets)
data(iris)
?iris
head(iris)
mean(iris$Sepal.Length)
iris_virginica <- subset(iris$Sepal.Length,iris$Species==virginica)
iris_virginica <- subset(iris$Sepal.Length,iris$Species=='virginica')
head(iris_virginica)
iris_virginica <- subset(iris,iris$Species=='virginica')
head(iris_virginica)
mean(iris_virginica$Sepal.Length,na.rm=TRUE)
apply(iris[,1:4],2,mean)
apply(iris[,1:4],1,mean)
library(mtcars)
library(datasets)
data(mtcars)
?mtcars
head(mtcars)
split(mtcars,mtcars$cyl)
?tapply
tapply(mtcars$mpg,mtcars$cyl,mean)
tapply(mtcars$cyl,mtcars$mpg,mean)
tapply(mtcars$mpg,mtcars$cyl,mean)
tapply(mtcars$hp,mtcars$cyl,mean)
x <- tapply(mtcars$hp,mtcars$cyl,mean)
x
x[1]
x[2]
x[3]
x[3]-x[1]
debug(ls)
ls
ls
lm(y~z)
ls
lm(z~t)
debug(ls)
ls
ls
debug(ls)
ls
quit
head(iris)
debug
debug(exit)
W
undebug(ls)
undebug(lm)
tapply(iris$Sepal.Length,iris$Species,mean)
get <- function() x
get
setwd('/home/thomas/Coursera/R_Programming/Assignments/Week3/')
getwd()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
x = matrix(c(1,2,3,4),2,2)
x
solve(x)
X <- matrix(c(1,2,3,4),2,2)
solve(X)
x = matrix()
is.null(x)
x
is.null(x[1])
is.null(x[[1])
is.null(x[[1]])
x[[1]]
is.na(x[[1]])
is.na(x)
source('~/Coursera/R_Programming/Assignments/Week3/cacheVector.R')
cachemean(c(1,2,3,4))
makeVector(c(1,5,4,6))
x
x <-c(1,4,3,5)
x
makeVector(x)
cacheMean(x)
cachemean(x)
cachemean()
a <- makeVector(1:10)
z
a
a$getmean()
a$get()
a
a <-makeVector()
a
a$set(1:50)
cachemean(a)
a$setmean(mean)
a$getmean()
a <- makeVector(1:50)
a
a$get()
a<-makeVector()
a$set(1:50)
a$get()
source('~/Coursera/R_Programming/Assignments/Week3/cacheVector.R')
a<-makeVector
a$set(1:50)
a
source('~/Coursera/R_Programming/Assignments/Week3/cacheVector.R')
a<-makeVector()
a$set(1:50)
a$getmean()
a$get()
cachemean(a)
a$getmean()
source('~/Coursera/R_Programming/Assignments/Week3/ProgrammingAssignment2/cachematrix.R')
source('~/Coursera/R_Programming/Assignments/Week3/ProgrammingAssignment2/cachematrix.R')
A<-makeCacheMatrix()
A
A = matrix(c(1,2,3,4),2,2)
A
A<-makeCacheMatrix()
